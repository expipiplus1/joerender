float4 red   = float4(0.85, 0.29, 0.29, 1.0);
float4 green = float4(0.44, 0.85, 0.29, 1.0);
float4 blue  = float4(0.49, 0.65, 0.85, 1.0);

float4 GetColor( const string color_string )
{
    return color_string == "blue" ? blue : red;
}

in varying float4 position : POSITION;
out varying float depth : DEPTH;

//in varying float4 color;
//in varying float in_a;
in varying float4 wpos : WPOS;

//const uniform int i;
uniform bool b;
//uniform float4 c;

float4 VertexMain( uniform float4 offset ) : POSITION
{
    return position + offset;
}

float4 MysteryColor()
{
    return wpos / float4(640,480,1,1);
}

float4 Green()
{
    return float4(0.1,0.8,0.2,1.0);
}

float4 PixelMain( int a, float4 my_color ) : COLOR
{
    return b ? green : red;
    //return b ? MysteryColor() : my_color;// + color;
}

//uniform int j;

const float4 default_offset = float4(0,0,0,0);

technique clear_blue
{
    pass
    {
        pixel_shader = compile PixelMain( 4+3%int(99.0),
                                          float4(0.8,0.1,0.1,1) );
        vertex_shader = compile VertexMain( float4(0,0,0,0) + default_offset );

        clear_color = GetColor( "blue" );
        clear = COLOR;
        dummy = b ? float2(1,2) : float2(3,4);
        //dummy = float2(3,4);
        //dummy3 = float3(1,1,1);
    }
}
